/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(15),a=n.n(r),l=n(645),o=n.n(l)()(a());o.push([e.id,"body {\n  margin: 0;\n}\nh1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  font-family: sans-serif;\n}\np {\n  margin: 0;\n}\nheader {\n  padding: 10px;\n}\na:link {\n  color: darkblue;\n}\n\nmain {\n  max-width: 480px;\n  margin: 0 auto;\n\n  box-shadow: 0 0 5px #555;\n  border-bottom: 1px solid transparent;\n}\nmain > header {\n  background-color: #EEF;\n  position: sticky;\n  top: 0px;\n  text-align: center;\n\n  box-shadow: 0 0 5px #AAB;\n}\n\n.feed header {\n  color: #222;\n}\n.feed footer {\n  padding: .5em;\n  text-align: right;\n}\n\narticle {\n  border-top: 1px solid gray;\n  padding: 10px;\n\n  height: 200px;\n}\narticle .text {\n  margin-top: 100px;\n  height: 4.6em;\n  overflow: hidden;\n}\narticle p {\n  text-align: justify;\n}\narticle a {\n  display: block;\n  padding: 5px;\n\n  font-weight: bold;\n  text-align: right;\n}\n\n.details section {\n  margin: 10px;\n}\n.details .source {\n  margin: .5em 0;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX;AACA;EACE,SAAS;EACT,uBAAuB;AACzB;AACA;EACE,SAAS;AACX;AACA;EACE,aAAa;AACf;AACA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,cAAc;;EAEd,wBAAwB;EACxB,oCAAoC;AACtC;AACA;EACE,sBAAsB;EACtB,gBAAgB;EAChB,QAAQ;EACR,kBAAkB;;EAElB,wBAAwB;AAC1B;;AAEA;EACE,WAAW;AACb;AACA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,0BAA0B;EAC1B,aAAa;;EAEb,aAAa;AACf;AACA;EACE,iBAAiB;EACjB,aAAa;EACb,gBAAgB;AAClB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,YAAY;;EAEZ,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;AACA;EACE,cAAc;AAChB",sourcesContent:["body {\n  margin: 0;\n}\nh1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  font-family: sans-serif;\n}\np {\n  margin: 0;\n}\nheader {\n  padding: 10px;\n}\na:link {\n  color: darkblue;\n}\n\nmain {\n  max-width: 480px;\n  margin: 0 auto;\n\n  box-shadow: 0 0 5px #555;\n  border-bottom: 1px solid transparent;\n}\nmain > header {\n  background-color: #EEF;\n  position: sticky;\n  top: 0px;\n  text-align: center;\n\n  box-shadow: 0 0 5px #AAB;\n}\n\n.feed header {\n  color: #222;\n}\n.feed footer {\n  padding: .5em;\n  text-align: right;\n}\n\narticle {\n  border-top: 1px solid gray;\n  padding: 10px;\n\n  height: 200px;\n}\narticle .text {\n  margin-top: 100px;\n  height: 4.6em;\n  overflow: hidden;\n}\narticle p {\n  text-align: justify;\n}\narticle a {\n  display: block;\n  padding: 5px;\n\n  font-weight: bold;\n  text-align: right;\n}\n\n.details section {\n  margin: 10px;\n}\n.details .source {\n  margin: .5em 0;\n}\n"],sourceRoot:""}]);const i=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var l=0;l<this.length;l++){var o=this[l][0];null!=o&&(a[o]=!0)}for(var i=0;i<e.length;i++){var u=[].concat(e[i]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},15:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,a=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,l=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){a=!0,l=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw l}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=a[1],o=a[3];if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),c="/*# ".concat(u," */"),s=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[l].concat(s).concat([c]).join("\n")}return[l].join("\n")}},679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?o:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=o;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var o=s(n);f&&(o=o.concat(f(n)));for(var i=u(t),m=u(n),v=0;v<o.length;++v){var y=o[v];if(!(l[y]||r&&r[y]||m&&m[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,l){for(var o,i,u=a(e),c=1;c<arguments.length;c++){for(var s in o=Object(arguments[c]))n.call(o,s)&&(u[s]=o[s]);if(t){i=t(o);for(var f=0;f<i.length;f++)r.call(o,i[f])&&(u[i[f]]=o[i[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function l(){}l.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,l,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:l,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),l=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,a,l,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=o}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,x=60107,C=60108,_=60114,A=60109,P=60110,T=60112,N=60113,O=60120,L=60115,z=60116,R=60121,M=60128,I=60129,F=60130,j=60131;if("function"==typeof Symbol&&Symbol.for){var D=Symbol.for;E=D("react.element"),S=D("react.portal"),x=D("react.fragment"),C=D("react.strict_mode"),_=D("react.profiler"),A=D("react.provider"),P=D("react.context"),T=D("react.forward_ref"),N=D("react.suspense"),O=D("react.suspense_list"),L=D("react.memo"),z=D("react.lazy"),R=D("react.block"),D("react.scope"),M=D("react.opaque.id"),I=D("react.debug_trace_mode"),F=D("react.offscreen"),j=D("react.legacy_hidden")}var U,B="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}function V(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var W=!1;function H(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i])return"\n"+a[o].replace(" at new "," at ")}while(1<=o&&0<=i);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function Q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case _:return"Profiler";case C:return"StrictMode";case N:return"Suspense";case O:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case A:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return q(e.type);case R:return q(e._render);case z:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function le(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function oe(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Ae=null,Pe=null;function Te(e){if(e=Zr(e)){if("function"!=typeof _e)throw Error(o(280));var t=e.stateNode;t&&(t=ea(t),_e(e.stateNode,e.type,t))}}function Ne(e){Ae?Pe?Pe.push(e):Pe=[e]:Ae=e}function Oe(){if(Ae){var e=Ae,t=Pe;if(Pe=Ae=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Le(e,t){return e(t)}function ze(e,t,n,r,a){return e(t,n,r,a)}function Re(){}var Me=Le,Ie=!1,Fe=!1;function je(){null===Ae&&null===Pe||(Re(),Oe())}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Ue=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(me){Ue=!1}function $e(e,t,n,r,a,l,o,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Ve=!1,We=null,He=!1,Qe=null,qe={onError:function(e){Ve=!0,We=e}};function Ke(e,t,n,r,a,l,o,i,u){Ve=!1,We=null,$e.apply(qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ye(e)!==e)throw Error(o(188))}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Je,et,tt,nt,rt=!1,at=[],lt=null,ot=null,it=null,ut=new Map,ct=new Map,st=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":it=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function ht(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e=dt(t,n,r,a,l),null!==t&&null!==(t=Zr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=Gr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){l.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){vt(e)&&n.delete(t)}function gt(){for(rt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&Je(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==lt&&vt(lt)&&(lt=null),null!==ot&&vt(ot)&&(ot=null),null!==it&&vt(it)&&(it=null),ut.forEach(yt),ct.forEach(yt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,gt)))}function wt(e){function t(t){return bt(t,e)}if(0<at.length){bt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&bt(lt,e),null!==ot&&bt(ot,e),null!==it&&bt(it,e),ut.forEach(t),ct.forEach(t),n=0;n<st.length;n++)(r=st[n]).blockedOn===e&&(r.blockedOn=null);for(;0<st.length&&null===(n=st[0]).blockedOn;)mt(n),null===n.blockedOn&&st.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},St={},xt={};function Ct(e){if(St[e])return St[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in xt)return St[e]=n[t];return e}f&&(xt=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var _t=Ct("animationend"),At=Ct("animationiteration"),Pt=Ct("animationstart"),Tt=Ct("transitionend"),Nt=new Map,Ot=new Map,Lt=["abort","abort",_t,"animationEnd",At,"animationIteration",Pt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tt,"transitionEnd","waiting","waiting"];function zt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Ot.set(r,t),Nt.set(r,a),c(a,[r])}}(0,l.unstable_now)();var Rt=8;function Mt(e){if(0!=(1&e))return Rt=15,1;if(0!=(2&e))return Rt=14,2;if(0!=(4&e))return Rt=13,4;var t=24&e;return 0!==t?(Rt=12,t):0!=(32&e)?(Rt=11,32):0!=(t=192&e)?(Rt=10,t):0!=(256&e)?(Rt=9,256):0!=(t=3584&e)?(Rt=8,t):0!=(4096&e)?(Rt=7,4096):0!=(t=4186112&e)?(Rt=6,t):0!=(t=62914560&e)?(Rt=5,t):67108864&e?(Rt=4,67108864):0!=(134217728&e)?(Rt=3,134217728):0!=(t=805306368&e)?(Rt=2,t):0!=(1073741824&e)?(Rt=1,1073741824):(Rt=8,e)}function It(e,t){var n=e.pendingLanes;if(0===n)return Rt=0;var r=0,a=0,l=e.expiredLanes,o=e.suspendedLanes,i=e.pingedLanes;if(0!==l)r=l,a=Rt=15;else if(0!=(l=134217727&n)){var u=l&~o;0!==u?(r=Mt(u),a=Rt):0!=(i&=l)&&(r=Mt(i),a=Rt)}else 0!=(l=n&~o)?(r=Mt(l),a=Rt):0!==i&&(r=Mt(i),a=Rt);if(0===r)return 0;if(r=n&((0>(r=31-$t(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&o)){if(Mt(t),a<=Rt)return t;Rt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-$t(t)),r|=e[n],t&=~a;return r}function Ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function jt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Dt(24&~t))?jt(10,t):e;case 10:return 0===(e=Dt(192&~t))?jt(8,t):e;case 8:return 0===(e=Dt(3584&~t))&&0===(e=Dt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Dt(805306368&~t))&&(t=268435456),t}throw Error(o(358,e))}function Dt(e){return e&-e}function Ut(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-$t(t)]=n}var $t=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/Wt|0)|0},Vt=Math.log,Wt=Math.LN2,Ht=l.unstable_UserBlockingPriority,Qt=l.unstable_runWithPriority,qt=!0;function Kt(e,t,n,r){Ie||Re();var a=Xt,l=Ie;Ie=!0;try{ze(a,e,t,n,r)}finally{(Ie=l)||je()}}function Yt(e,t,n,r){Qt(Ht,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var a;if(qt)if((a=0==(4&t))&&0<at.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),at.push(e);else{var l=Gt(e,t,n,r);if(null===l)a&&pt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=dt(l,e,t,n,r),void at.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return lt=ht(lt,e,t,n,r,a),!0;case"dragenter":return ot=ht(ot,e,t,n,r,a),!0;case"mouseover":return it=ht(it,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return ut.set(l,ht(ut.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,ct.set(l,ht(ct.get(l)||null,e,t,n,r,a)),!0}return!1}(l,e,t,n,r))return;pt(e,r)}Nr(e,t,r,null,n)}}}function Gt(e,t,n,r){var a=Ce(r);if(null!==(a=Gr(a))){var l=Ye(a);if(null===l)a=null;else{var o=l.tag;if(13===o){if(null!==(a=Xe(l)))return a;a=null}else if(3===o){if(l.stateNode.hydrate)return 3===l.tag?l.stateNode.containerInfo:null;a=null}else l!==a&&(a=null)}}return Nr(e,t,r,a,n),null}var Zt=null,Jt=null,en=null;function tn(){if(en)return en;var e,t,n=Jt,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[l-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function ln(e){function t(t,n,r,a,l){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var on,un,cn,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=ln(sn),dn=a({},sn,{view:0,detail:0}),pn=ln(dn),hn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(on=e.screenX-cn.screenX,un=e.screenY-cn.screenY):un=on=0,cn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:un}}),mn=ln(hn),vn=ln(a({},hn,{dataTransfer:0})),yn=ln(a({},dn,{relatedTarget:0})),gn=ln(a({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=ln(a({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=ln(a({},sn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return xn}var _n=ln(a({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),An=ln(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=ln(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=ln(a({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=ln(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),On=[9,13,27,32],Ln=f&&"CompositionEvent"in window,zn=null;f&&"documentMode"in document&&(zn=document.documentMode);var Rn=f&&"TextEvent"in window&&!zn,Mn=f&&(!Ln||zn&&8<zn&&11>=zn),In=String.fromCharCode(32),Fn=!1;function jn(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Dn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Vn(e,t,n,r){Ne(r),0<(t=Lr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Hn=null;function Qn(e){xr(e,0)}function qn(e){if(G(Jr(e)))return e}function Kn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Xn;if(f){var Gn="oninput"in document;if(!Gn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Gn="function"==typeof Zn.oninput}Xn=Gn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function Jn(){Wn&&(Wn.detachEvent("onpropertychange",er),Hn=Wn=null)}function er(e){if("value"===e.propertyName&&qn(Hn)){var t=[];if(Vn(t,Hn,e,Ce(e)),e=Qn,Ie)e(t);else{Ie=!0;try{Le(e,t)}finally{Ie=!1,je()}}}}function tr(e,t,n){"focusin"===e?(Jn(),Hn=n,(Wn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Jn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return qn(Hn)}function rr(e,t){if("click"===e)return qn(t)}function ar(e,t){if("input"===e||"change"===e)return qn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},or=Object.prototype.hasOwnProperty;function ir(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!or.call(t,n[r])||!lr(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function sr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?sr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,mr=null,vr=null,yr=!1;function gr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==hr||hr!==Z(r)||(r="selectionStart"in(r=hr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ir(vr,r)||(vr=r,0<(r=Lr(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}zt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),zt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),zt(Lt,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)Ot.set(br[wr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Sr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,l,i,u,c){if(Ke.apply(this,arguments),Ve){if(!Ve)throw Error(o(198));var s=We;Ve=!1,We=null,He||(He=!0,Qe=s)}}(r,t,void 0,e),e.currentTarget=null}function xr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==l&&a.isPropagationStopped())break e;Sr(a,i,c),l=u}else for(o=0;o<r.length;o++){if(u=(i=r[o]).instance,c=i.currentTarget,i=i.listener,u!==l&&a.isPropagationStopped())break e;Sr(a,i,c),l=u}}}if(He)throw e=Qe,He=!1,Qe=null,e}function Cr(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Tr(t,e,2,!1),n.add(r))}var _r="_reactListening"+Math.random().toString(36).slice(2);function Ar(e){e[_r]||(e[_r]=!0,i.forEach((function(t){Er.has(t)||Pr(t,!1,e,null),Pr(t,!0,e,null)})))}function Pr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,l=n;if("selectionchange"===e&&9!==n.nodeType&&(l=n.ownerDocument),null!==r&&!t&&Er.has(e)){if("scroll"!==e)return;a|=2,l=r}var o=ta(l),i=e+"__"+(t?"capture":"bubble");o.has(i)||(t&&(a|=4),Tr(l,e,a,t),o.add(i))}function Tr(e,t,n,r){var a=Ot.get(t);switch(void 0===a?2:a){case 0:a=Kt;break;case 1:a=Yt;break;default:a=Xt}n=a.bind(null,t,n,e),a=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Nr(e,t,n,r,a){var l=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=Gr(i)))return;if(5===(u=o.tag)||6===u){r=l=o;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Fe)return e();Fe=!0;try{Me(e,t,n)}finally{Fe=!1,je()}}((function(){var r=l,a=Ce(n),o=[];e:{var i=Nt.get(e);if(void 0!==i){var u=fn,c=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=_n;break;case"focusin":c="focus",u=yn;break;case"focusout":c="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pn;break;case _t:case At:case Pt:u=gn;break;case Tt:u=Tn;break;case"scroll":u=pn;break;case"wheel":u=Nn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=An}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=De(h,d))&&s.push(Or(h,m,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,a),o.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Gr(c)&&!c[Yr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Gr(c):null)&&(c!==(f=Ye(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=mn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=An,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:Jr(u),p=null==c?i:Jr(c),(i=new s(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,Gr(a)===r&&((s=new s(d,h+"enter",c,n,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=zr(p))h++;for(p=0,m=d;m;m=zr(m))p++;for(;0<h-p;)s=zr(s),h--;for(;0<p-h;)d=zr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=zr(s),d=zr(d)}s=null}else s=null;null!==u&&Rr(o,i,u,s,!1),null!==c&&null!==f&&Rr(o,f,c,s,!0)}if("select"===(u=(i=r?Jr(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Kn;else if($n(i))if(Yn)v=ar;else{v=nr;var y=tr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=rr);switch(v&&(v=v(e,r))?Vn(o,v,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ae(i,"number",i.value)),y=r?Jr(r):window,e){case"focusin":($n(y)||"true"===y.contentEditable)&&(hr=y,mr=r,vr=null);break;case"focusout":vr=mr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,gr(o,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":gr(o,n,a)}var g;if(Ln)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Un?jn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Mn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==b?"onCompositionEnd"===b&&Un&&(g=tn()):(Jt="value"in(Zt=a)?Zt.value:Zt.textContent,Un=!0)),0<(y=Lr(r,b)).length&&(b=new wn(b,e,null,n,a),o.push({event:b,listeners:y}),(g||null!==(g=Dn(n)))&&(b.data=g))),(g=Rn?function(e,t){switch(e){case"compositionend":return Dn(t);case"keypress":return 32!==t.which?null:(Fn=!0,In);case"textInput":return(e=t.data)===In&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Ln&&jn(e,t)?(e=tn(),en=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Lr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=g)}xr(o,t)}))}function Or(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Lr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=De(e,n))&&r.unshift(Or(e,l,a)),null!=(l=De(e,t))&&r.push(Or(e,l,a))),e=e.return}return r}function zr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Rr(e,t,n,r,a){for(var l=t._reactName,o=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=De(n,l))&&o.unshift(Or(n,u,i)):a||null!=(u=De(n,l))&&o.push(Or(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}function Mr(){}var Ir=null,Fr=null;function jr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Dr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Ur="function"==typeof setTimeout?setTimeout:void 0,Br="function"==typeof clearTimeout?clearTimeout:void 0;function $r(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Vr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Hr=0,Qr=Math.random().toString(36).slice(2),qr="__reactFiber$"+Qr,Kr="__reactProps$"+Qr,Yr="__reactContainer$"+Qr,Xr="__reactEvents$"+Qr;function Gr(e){var t=e[qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Yr]||n[qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[qr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[qr]||e[Yr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ea(e){return e[Kr]||null}function ta(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function la(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function oa(e,t){ra++,na[ra]=e.current,e.current=t}var ia={},ua=aa(ia),ca=aa(!1),sa=ia;function fa(e,t){var n=e.type.contextTypes;if(!n)return ia;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function da(e){return null!=e.childContextTypes}function pa(){la(ca),la(ua)}function ha(e,t,n){if(ua.current!==ia)throw Error(o(168));oa(ua,t),oa(ca,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var l in r=r.getChildContext())if(!(l in e))throw Error(o(108,q(t)||"Unknown",l));return a({},n,r)}function va(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ia,sa=ua.current,oa(ua,e),oa(ca,ca.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=ma(e,t,sa),r.__reactInternalMemoizedMergedChildContext=e,la(ca),la(ua),oa(ua,e)):la(ca),oa(ca,n)}var ga=null,ba=null,wa=l.unstable_runWithPriority,ka=l.unstable_scheduleCallback,Ea=l.unstable_cancelCallback,Sa=l.unstable_shouldYield,xa=l.unstable_requestPaint,Ca=l.unstable_now,_a=l.unstable_getCurrentPriorityLevel,Aa=l.unstable_ImmediatePriority,Pa=l.unstable_UserBlockingPriority,Ta=l.unstable_NormalPriority,Na=l.unstable_LowPriority,Oa=l.unstable_IdlePriority,La={},za=void 0!==xa?xa:function(){},Ra=null,Ma=null,Ia=!1,Fa=Ca(),ja=1e4>Fa?Ca:function(){return Ca()-Fa};function Da(){switch(_a()){case Aa:return 99;case Pa:return 98;case Ta:return 97;case Na:return 96;case Oa:return 95;default:throw Error(o(332))}}function Ua(e){switch(e){case 99:return Aa;case 98:return Pa;case 97:return Ta;case 96:return Na;case 95:return Oa;default:throw Error(o(332))}}function Ba(e,t){return e=Ua(e),wa(e,t)}function $a(e,t,n){return e=Ua(e),ka(e,t,n)}function Va(){if(null!==Ma){var e=Ma;Ma=null,Ea(e)}Wa()}function Wa(){if(!Ia&&null!==Ra){Ia=!0;var e=0;try{var t=Ra;Ba(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ra=null}catch(t){throw null!==Ra&&(Ra=Ra.slice(e+1)),ka(Aa,Va),t}finally{Ia=!1}}}var Ha=k.ReactCurrentBatchConfig;function Qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var qa=aa(null),Ka=null,Ya=null,Xa=null;function Ga(){Xa=Ya=Ka=null}function Za(e){var t=qa.current;la(qa),e.type._context._currentValue=t}function Ja(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function el(e,t){Ka=e,Xa=Ya=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Lo=!0),e.firstContext=null)}function tl(e,t){if(Xa!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Xa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ya){if(null===Ka)throw Error(o(308));Ya=t,Ka.dependencies={lanes:0,firstContext:t,responders:null}}else Ya=Ya.next=t;return e._currentValue}var nl=!1;function rl(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function al(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ll(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ol(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function il(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=o:l=l.next=o,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ul(e,t,n,r){var l=e.updateQueue;nl=!1;var o=l.firstBaseUpdate,i=l.lastBaseUpdate,u=l.shared.pending;if(null!==u){l.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?o=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==o){for(d=l.baseState,i=0,f=s=c=null;;){u=o.lane;var p=o.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var h=e,m=o;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:nl=!0}}null!==o.callback&&(e.flags|=32,null===(u=l.effects)?l.effects=[o]:u.push(o))}else p={eventTime:p,lane:u,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(o=o.next)){if(null===(u=l.shared.pending))break;o=u.next,u.next=null,l.lastBaseUpdate=u,l.shared.pending=null}}null===f&&(c=d),l.baseState=c,l.firstBaseUpdate=s,l.lastBaseUpdate=f,Ri|=i,e.lanes=i,e.memoizedState=d}}function cl(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var sl=(new r.Component).refs;function fl(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var dl={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=lu(),a=ou(e),l=ll(r,a);l.payload=t,null!=n&&(l.callback=n),ol(e,l),iu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=lu(),a=ou(e),l=ll(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),ol(e,l),iu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=lu(),r=ou(e),a=ll(n,r);a.tag=2,null!=t&&(a.callback=t),ol(e,a),iu(e,r,n)}};function pl(e,t,n,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(t.prototype&&t.prototype.isPureReactComponent&&ir(n,r)&&ir(a,l))}function hl(e,t,n){var r=!1,a=ia,l=t.contextType;return"object"==typeof l&&null!==l?l=tl(l):(a=da(t)?sa:ua.current,l=(r=null!=(r=t.contextTypes))?fa(e,a):ia),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=dl,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function ml(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&dl.enqueueReplaceState(t,t.state,null)}function vl(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=sl,rl(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=tl(l):(l=da(t)?sa:ua.current,a.context=fa(e,l)),ul(e,n,a,r),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(fl(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&dl.enqueueReplaceState(a,a.state,null),ul(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yl=Array.isArray;function gl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===sl&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function bl(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function wl(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Bu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=gl(e,t,n),r.return=e,r):((r=ju(n.type,n.key,n.props,null,e.mode,r)).ref=gl(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=$u(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=Du(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Bu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=ju(t.type,t.key,t.props,null,e.mode,n)).ref=gl(e,null,t),n.return=e,n;case S:return(t=$u(t,e.mode,n)).return=e,t}if(yl(t)||$(t))return(t=Du(t,e.mode,n,null)).return=e,t;bl(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?n.type===x?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case S:return n.key===a?s(e,t,n,r):null}if(yl(n)||$(n))return null!==a?null:f(e,t,n,r,null);bl(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case S:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yl(r)||$(r))return f(t,e=e.get(n)||null,r,a,null);bl(t,r)}return null}function m(a,o,i,u){for(var c=null,s=null,f=o,m=o=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(a,f,i[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),o=l(y,o,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===i.length)return n(a,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(o=l(f,o,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);m<i.length;m++)null!==(v=h(f,a,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),o=l(v,o,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,i,u,c){var s=$(u);if("function"!=typeof s)throw Error(o(150));if(null==(u=s.call(u)))throw Error(o(151));for(var f=s=null,m=i,v=i=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(a,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),i=l(b,i,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(a,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(i=l(g,i,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(a,m);!g.done;v++,g=u.next())null!==(g=h(m,a,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=l(g,i,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(a,e)})),s}return function(e,r,l,u){var c="object"==typeof l&&null!==l&&l.type===x&&null===l.key;c&&(l=l.props.children);var s="object"==typeof l&&null!==l;if(s)switch(l.$$typeof){case E:e:{for(s=l.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(l.type===x){n(e,c.sibling),(r=a(c,l.props.children)).return=e,e=r;break e}break;default:if(c.elementType===l.type){n(e,c.sibling),(r=a(c,l.props)).ref=gl(e,c,l),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}l.type===x?((r=Du(l.props.children,e.mode,u,l.key)).return=e,e=r):((u=ju(l.type,l.key,l.props,null,e.mode,u)).ref=gl(e,r,l),u.return=e,e=u)}return i(e);case S:e:{for(c=l.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===l.containerInfo&&r.stateNode.implementation===l.implementation){n(e,r.sibling),(r=a(r,l.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=$u(l,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof l||"number"==typeof l)return l=""+l,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,l)).return=e,e=r):(n(e,r),(r=Bu(l,e.mode,u)).return=e,e=r),i(e);if(yl(l))return m(e,r,l,u);if($(l))return v(e,r,l,u);if(s&&bl(e,l),void 0===l&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,q(e.type)||"Component"))}return n(e,r)}}var kl=wl(!0),El=wl(!1),Sl={},xl=aa(Sl),Cl=aa(Sl),_l=aa(Sl);function Al(e){if(e===Sl)throw Error(o(174));return e}function Pl(e,t){switch(oa(_l,t),oa(Cl,e),oa(xl,Sl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}la(xl),oa(xl,t)}function Tl(){la(xl),la(Cl),la(_l)}function Nl(e){Al(_l.current);var t=Al(xl.current),n=pe(t,e.type);t!==n&&(oa(Cl,e),oa(xl,n))}function Ol(e){Cl.current===e&&(la(xl),la(Cl))}var Ll=aa(0);function zl(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Rl=null,Ml=null,Il=!1;function Fl(e,t){var n=Mu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function jl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Dl(e){if(Il){var t=Ml;if(t){var n=t;if(!jl(e,t)){if(!(t=Vr(n.nextSibling))||!jl(e,t))return e.flags=-1025&e.flags|2,Il=!1,void(Rl=e);Fl(Rl,n)}Rl=e,Ml=Vr(t.firstChild)}else e.flags=-1025&e.flags|2,Il=!1,Rl=e}}function Ul(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Rl=e}function Bl(e){if(e!==Rl)return!1;if(!Il)return Ul(e),Il=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Dr(t,e.memoizedProps))for(t=Ml;t;)Fl(e,t),t=Vr(t.nextSibling);if(Ul(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ml=Vr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ml=null}}else Ml=Rl?Vr(e.stateNode.nextSibling):null;return!0}function $l(){Ml=Rl=null,Il=!1}var Vl=[];function Wl(){for(var e=0;e<Vl.length;e++)Vl[e]._workInProgressVersionPrimary=null;Vl.length=0}var Hl=k.ReactCurrentDispatcher,Ql=k.ReactCurrentBatchConfig,ql=0,Kl=null,Yl=null,Xl=null,Gl=!1,Zl=!1;function Jl(){throw Error(o(321))}function eo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function to(e,t,n,r,a,l){if(ql=l,Kl=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Hl.current=null===e||null===e.memoizedState?Po:To,e=n(r,a),Zl){l=0;do{if(Zl=!1,!(25>l))throw Error(o(301));l+=1,Xl=Yl=null,t.updateQueue=null,Hl.current=No,e=n(r,a)}while(Zl)}if(Hl.current=Ao,t=null!==Yl&&null!==Yl.next,ql=0,Xl=Yl=Kl=null,Gl=!1,t)throw Error(o(300));return e}function no(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Xl?Kl.memoizedState=Xl=e:Xl=Xl.next=e,Xl}function ro(){if(null===Yl){var e=Kl.alternate;e=null!==e?e.memoizedState:null}else e=Yl.next;var t=null===Xl?Kl.memoizedState:Xl.next;if(null!==t)Xl=t,Yl=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Yl=e).memoizedState,baseState:Yl.baseState,baseQueue:Yl.baseQueue,queue:Yl.queue,next:null},null===Xl?Kl.memoizedState=Xl=e:Xl=Xl.next=e}return Xl}function ao(e,t){return"function"==typeof t?t(e):t}function lo(e){var t=ro(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Yl,a=r.baseQueue,l=n.pending;if(null!==l){if(null!==a){var i=a.next;a.next=l.next,l.next=i}r.baseQueue=a=l,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=l=null,c=a;do{var s=c.lane;if((ql&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,l=r):u=u.next=f,Kl.lanes|=s,Ri|=s}c=c.next}while(null!==c&&c!==a);null===u?l=r:u.next=i,lr(r,t.memoizedState)||(Lo=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function oo(e){var t=ro(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,l=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{l=e(l,i.action),i=i.next}while(i!==a);lr(l,t.memoizedState)||(Lo=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,r]}function io(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(ql&e)===e)&&(t._workInProgressVersionPrimary=r,Vl.push(t))),e)return n(t._source);throw Vl.push(t),Error(o(350))}function uo(e,t,n,r){var a=_i;if(null===a)throw Error(o(349));var l=t._getVersion,i=l(t._source),u=Hl.current,c=u.useState((function(){return io(a,t,n)})),s=c[1],f=c[0];c=Xl;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Kl;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=l(t._source);if(!lr(i,e)){e=n(t._source),lr(f,e)||(s(e),e=ou(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,o=e;0<o;){var u=31-$t(o),c=1<<u;r[u]|=e,o&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=ou(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),lr(h,n)&&lr(m,t)&&lr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ao,lastRenderedState:f}).dispatch=s=_o.bind(null,Kl,e),c.queue=e,c.baseQueue=null,f=io(a,t,n),c.memoizedState=c.baseState=f),f}function co(e,t,n){return uo(ro(),e,t,n)}function so(e){var t=no();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ao,lastRenderedState:e}).dispatch=_o.bind(null,Kl,e),[t.memoizedState,e]}function fo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Kl.updateQueue)?(t={lastEffect:null},Kl.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function po(e){return e={current:e},no().memoizedState=e}function ho(){return ro().memoizedState}function mo(e,t,n,r){var a=no();Kl.flags|=e,a.memoizedState=fo(1|t,n,void 0,void 0===r?null:r)}function vo(e,t,n,r){var a=ro();r=void 0===r?null:r;var l=void 0;if(null!==Yl){var o=Yl.memoizedState;if(l=o.destroy,null!==r&&eo(r,o.deps))return void fo(t,n,l,r)}Kl.flags|=e,a.memoizedState=fo(1|t,n,l,r)}function yo(e,t){return mo(516,4,e,t)}function go(e,t){return vo(516,4,e,t)}function bo(e,t){return vo(4,2,e,t)}function wo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ko(e,t,n){return n=null!=n?n.concat([e]):null,vo(4,2,wo.bind(null,t,e),n)}function Eo(){}function So(e,t){var n=ro();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&eo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function xo(e,t){var n=ro();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&eo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Co(e,t){var n=Da();Ba(98>n?98:n,(function(){e(!0)})),Ba(97<n?97:n,(function(){var n=Ql.transition;Ql.transition=1;try{e(!1),t()}finally{Ql.transition=n}}))}function _o(e,t,n){var r=lu(),a=ou(e),l={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},o=t.pending;if(null===o?l.next=l:(l.next=o.next,o.next=l),t.pending=l,o=e.alternate,e===Kl||null!==o&&o===Kl)Zl=Gl=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=o(i,n);if(l.eagerReducer=o,l.eagerState=u,lr(u,i))return}catch(e){}iu(e,a,r)}}var Ao={readContext:tl,useCallback:Jl,useContext:Jl,useEffect:Jl,useImperativeHandle:Jl,useLayoutEffect:Jl,useMemo:Jl,useReducer:Jl,useRef:Jl,useState:Jl,useDebugValue:Jl,useDeferredValue:Jl,useTransition:Jl,useMutableSource:Jl,useOpaqueIdentifier:Jl,unstable_isNewReconciler:!1},Po={readContext:tl,useCallback:function(e,t){return no().memoizedState=[e,void 0===t?null:t],e},useContext:tl,useEffect:yo,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mo(4,2,wo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mo(4,2,e,t)},useMemo:function(e,t){var n=no();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=no();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=_o.bind(null,Kl,e),[r.memoizedState,e]},useRef:po,useState:so,useDebugValue:Eo,useDeferredValue:function(e){var t=so(e),n=t[0],r=t[1];return yo((function(){var t=Ql.transition;Ql.transition=1;try{r(e)}finally{Ql.transition=t}}),[e]),n},useTransition:function(){var e=so(!1),t=e[0];return po(e=Co.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=no();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},uo(r,e,t,n)},useOpaqueIdentifier:function(){if(Il){var e=!1,t=function(e){return{$$typeof:M,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Hr++).toString(36))),Error(o(355))})),n=so(t)[1];return 0==(2&Kl.mode)&&(Kl.flags|=516,fo(5,(function(){n("r:"+(Hr++).toString(36))}),void 0,null)),t}return so(t="r:"+(Hr++).toString(36)),t},unstable_isNewReconciler:!1},To={readContext:tl,useCallback:So,useContext:tl,useEffect:go,useImperativeHandle:ko,useLayoutEffect:bo,useMemo:xo,useReducer:lo,useRef:ho,useState:function(){return lo(ao)},useDebugValue:Eo,useDeferredValue:function(e){var t=lo(ao),n=t[0],r=t[1];return go((function(){var t=Ql.transition;Ql.transition=1;try{r(e)}finally{Ql.transition=t}}),[e]),n},useTransition:function(){var e=lo(ao)[0];return[ho().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return lo(ao)[0]},unstable_isNewReconciler:!1},No={readContext:tl,useCallback:So,useContext:tl,useEffect:go,useImperativeHandle:ko,useLayoutEffect:bo,useMemo:xo,useReducer:oo,useRef:ho,useState:function(){return oo(ao)},useDebugValue:Eo,useDeferredValue:function(e){var t=oo(ao),n=t[0],r=t[1];return go((function(){var t=Ql.transition;Ql.transition=1;try{r(e)}finally{Ql.transition=t}}),[e]),n},useTransition:function(){var e=oo(ao)[0];return[ho().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return oo(ao)[0]},unstable_isNewReconciler:!1},Oo=k.ReactCurrentOwner,Lo=!1;function zo(e,t,n,r){t.child=null===e?El(t,null,n,r):kl(t,e.child,n,r)}function Ro(e,t,n,r,a){n=n.render;var l=t.ref;return el(t,a),r=to(e,t,n,r,l,a),null===e||Lo?(t.flags|=1,zo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function Mo(e,t,n,r,a,l){if(null===e){var o=n.type;return"function"!=typeof o||Iu(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=ju(n.type,null,r,t,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Io(e,t,o,r,a,l))}return o=e.child,0==(a&l)&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:ir)(a,r)&&e.ref===t.ref)?Zo(e,t,l):(t.flags|=1,(e=Fu(o,r)).ref=t.ref,e.return=t,t.child=e)}function Io(e,t,n,r,a,l){if(null!==e&&ir(e.memoizedProps,r)&&e.ref===t.ref){if(Lo=!1,0==(l&a))return t.lanes=e.lanes,Zo(e,t,l);0!=(16384&e.flags)&&(Lo=!0)}return Do(e,t,n,r,l)}function Fo(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},pu(0,n);else{if(0==(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},pu(0,e),null;t.memoizedState={baseLanes:0},pu(0,null!==l?l.baseLanes:n)}else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,pu(0,r);return zo(e,t,a,n),t.child}function jo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Do(e,t,n,r,a){var l=da(n)?sa:ua.current;return l=fa(t,l),el(t,a),n=to(e,t,n,r,l,a),null===e||Lo?(t.flags|=1,zo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function Uo(e,t,n,r,a){if(da(n)){var l=!0;va(t)}else l=!1;if(el(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),hl(t,n,r),vl(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,c=n.contextType;c="object"==typeof c&&null!==c?tl(c):fa(t,c=da(n)?sa:ua.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||u!==c)&&ml(t,o,r,c),nl=!1;var d=t.memoizedState;o.state=d,ul(t,r,o,a),u=t.memoizedState,i!==r||d!==u||ca.current||nl?("function"==typeof s&&(fl(t,n,s,r),u=t.memoizedState),(i=nl||pl(t,n,i,r,d,u,c))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4)):("function"==typeof o.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=c,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4),r=!1)}else{o=t.stateNode,al(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Qa(t.type,i),o.props=c,f=t.pendingProps,d=o.context,u="object"==typeof(u=n.contextType)&&null!==u?tl(u):fa(t,u=da(n)?sa:ua.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==u)&&ml(t,o,r,u),nl=!1,d=t.memoizedState,o.state=d,ul(t,r,o,a);var h=t.memoizedState;i!==f||d!==h||ca.current||nl?("function"==typeof p&&(fl(t,n,p,r),h=t.memoizedState),(c=nl||pl(t,n,c,r,d,h,u))?(s||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),o.props=r,o.state=h,o.context=u,r=c):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Bo(e,t,n,r,l,a)}function Bo(e,t,n,r,a,l){jo(e,t);var o=0!=(64&t.flags);if(!r&&!o)return a&&ya(t,n,!1),Zo(e,t,l);r=t.stateNode,Oo.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=kl(t,e.child,null,l),t.child=kl(t,null,i,l)):zo(e,t,i,l),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function $o(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),Pl(e,t.containerInfo)}var Vo,Wo,Ho,Qo={dehydrated:null,retryLane:0};function qo(e,t,n){var r,a=t.pendingProps,l=Ll.current,o=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(o=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(l|=1),oa(Ll,1&l),null===e?(void 0!==a.fallback&&Dl(t),e=a.children,l=a.fallback,o?(e=Ko(t,e,l,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qo,e):"number"==typeof a.unstable_expectedLoadTime?(e=Ko(t,e,l,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qo,t.lanes=33554432,e):((n=Uu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,o?(a=function(e,t,n,r,a){var l=t.mode,o=e.child;e=o.sibling;var i={mode:"hidden",children:n};return 0==(2&l)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=i,null!==(o=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=o,o.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Fu(o,i),null!==e?r=Fu(e,r):(r=Du(r,l,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),o=t.child,l=e.child.memoizedState,o.memoizedState=null===l?{baseLanes:n}:{baseLanes:l.baseLanes|n},o.childLanes=e.childLanes&~n,t.memoizedState=Qo,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Fu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Ko(e,t,n,r){var a=e.mode,l=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==l?(l.childLanes=0,l.pendingProps=t):l=Uu(t,a,0,null),n=Du(n,a,r,null),l.return=e,n.return=e,l.sibling=n,e.child=l,n}function Yo(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ja(e.return,t)}function Xo(e,t,n,r,a,l){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:l}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a,o.lastEffect=l)}function Go(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(zo(e,t,r.children,n),0!=(2&(r=Ll.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yo(e,n);else if(19===e.tag)Yo(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(oa(Ll,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===zl(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Xo(t,!1,a,n,l,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===zl(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Xo(t,!0,n,null,l,t.lastEffect);break;case"together":Xo(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ri|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Jo(e,t){if(!Il)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ei(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return Tl(),la(ca),la(ua),Wl(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Bl(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ol(t);var l=Al(_l.current);if(n=t.type,null!==e&&null!=t.stateNode)Wo(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Al(xl.current),Bl(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[qr]=t,r[Kr]=i,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Cr(kr[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,i),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Cr("invalid",r);break;case"textarea":ue(r,i),Cr("invalid",r)}for(var c in Se(n,i),e=null,i)i.hasOwnProperty(c)&&(l=i[c],"children"===c?"string"==typeof l?r.textContent!==l&&(e=["children",l]):"number"==typeof l&&r.textContent!==""+l&&(e=["children",""+l]):u.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Cr("scroll",r));switch(n){case"input":X(r),re(r,i,!0);break;case"textarea":X(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Mr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===l.nodeType?l:l.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[qr]=t,e[Kr]=r,Vo(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),l=r;break;case"iframe":case"object":case"embed":Cr("load",e),l=r;break;case"video":case"audio":for(l=0;l<kr.length;l++)Cr(kr[l],e);l=r;break;case"source":Cr("error",e),l=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),l=r;break;case"details":Cr("toggle",e),l=r;break;case"input":ee(e,r),l=J(e,r),Cr("invalid",e);break;case"option":l=le(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=a({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":ue(e,r),l=ie(e,r),Cr("invalid",e);break;default:l=r}Se(n,l);var s=l;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Cr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?oe(e,!!r.multiple,i,!1):null!=r.defaultValue&&oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Mr)}jr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ho(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Al(_l.current),Al(xl.current),Bl(t)?(r=t.stateNode,n=t.memoizedProps,r[qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[qr]=t,t.stateNode=r)}return null;case 13:return la(Ll),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Bl(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ll.current)?0===Oi&&(Oi=3):(0!==Oi&&3!==Oi||(Oi=4),null===_i||0==(134217727&Ri)&&0==(134217727&Mi)||fu(_i,Pi))),(r||n)&&(t.flags|=4),null);case 4:return Tl(),null===e&&Ar(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(la(Ll),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)Jo(r,!1);else{if(0!==Oi||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=zl(e))){for(t.flags|=64,Jo(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return oa(Ll,1&Ll.current|2),t.child}e=e.sibling}null!==r.tail&&ja()>Di&&(t.flags|=64,i=!0,Jo(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=zl(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Jo(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Il)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*ja()-r.renderingStartTime>Di&&1073741824!==n&&(t.flags|=64,i=!0,Jo(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=ja(),n.sibling=null,t=Ll.current,oa(Ll,i?1&t|2:1&t),n):null;case 23:case 24:return hu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(o(156,t.tag))}function ti(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Tl(),la(ca),la(ua),Wl(),0!=(64&(t=e.flags)))throw Error(o(285));return e.flags=-4097&t|64,e;case 5:return Ol(e),null;case 13:return la(Ll),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return la(Ll),null;case 4:return Tl(),null;case 10:return Za(e),null;case 23:case 24:return hu(),null;default:return null}}function ni(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ri(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Vo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wo=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,Al(xl.current);var o,i=null;switch(n){case"input":l=J(e,l),r=J(e,r),i=[];break;case"option":l=le(e,l),r=le(e,r),i=[];break;case"select":l=a({},l,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":l=ie(e,l),r=ie(e,r),i=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=Mr)}for(f in Se(n,r),n=null,l)if(!r.hasOwnProperty(f)&&l.hasOwnProperty(f)&&null!=l[f])if("style"===f){var c=l[f];for(o in c)c.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=l?l[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(o in c)!c.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in s)s.hasOwnProperty(o)&&c[o]!==s[o]&&(n||(n={}),n[o]=s[o])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===M?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Ho=function(e,t,n,r){n!==r&&(t.flags|=4)};var ai="function"==typeof WeakMap?WeakMap:Map;function li(e,t,n){(n=ll(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vi||(Vi=!0,Wi=r),ri(0,t)},n}function oi(e,t,n){(n=ll(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ri(0,t),r(a)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Hi?Hi=new Set([this]):Hi.add(this),ri(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ii="function"==typeof WeakSet?WeakSet:Set;function ui(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ou(e,t)}else t.current=null}function ci(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&$r(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(o(163))}function si(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Pu(n,e),Au(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&cl(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}cl(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&jr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(o(163))}function fi(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function di(e,t){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(ga,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Pu(t,n);else{r=t;try{a()}catch(e){Ou(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ui(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ou(t,e)}break;case 5:ui(t);break;case 4:gi(e,t)}}function pi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function mi(e){e:{for(var t=e.return;null!==t;){if(hi(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?vi(e,n,t):yi(e,n,t)}function vi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Mr));else if(4!==r&&null!==(e=e.child))for(vi(e,t,n),e=e.sibling;null!==e;)vi(e,t,n),e=e.sibling}function yi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function gi(e,t){for(var n,r,a=t,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(o(160));switch(n=l.stateNode,l.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,c=u;;)if(di(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(di(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var l=t.updateQueue;if(t.updateQueue=null,null!==l){for(n[Kr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,a),t=xe(e,r),a=0;a<l.length;a+=2){var i=l[a],u=l[a+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ye(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(l=r.value)?oe(n,!!r.multiple,l,!1):e!==!!r.multiple&&(null!=r.defaultValue?oe(n,!!r.multiple,r.defaultValue,!0):oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(ji=ja(),fi(t.child,!0)),void wi(t);case 19:return void wi(t);case 17:return;case 23:case 24:return void fi(t,null!==t.memoizedState)}throw Error(o(163))}function wi(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ii),t.forEach((function(t){var r=zu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ki(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Ei=Math.ceil,Si=k.ReactCurrentDispatcher,xi=k.ReactCurrentOwner,Ci=0,_i=null,Ai=null,Pi=0,Ti=0,Ni=aa(0),Oi=0,Li=null,zi=0,Ri=0,Mi=0,Ii=0,Fi=null,ji=0,Di=1/0;function Ui(){Di=ja()+500}var Bi,$i=null,Vi=!1,Wi=null,Hi=null,Qi=!1,qi=null,Ki=90,Yi=[],Xi=[],Gi=null,Zi=0,Ji=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function lu(){return 0!=(48&Ci)?ja():-1!==eu?eu:eu=ja()}function ou(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Da()?1:2;if(0===tu&&(tu=zi),0!==Ha.transition){0!==nu&&(nu=null!==Fi?Fi.pendingLanes:0),e=tu;var t=4186112&~nu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Da(),e=jt(0!=(4&Ci)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function iu(e,t,n){if(50<Zi)throw Zi=0,Ji=null,Error(o(185));if(null===(e=uu(e,t)))return null;Bt(e,t,n),e===_i&&(Mi|=t,4===Oi&&fu(e,Pi));var r=Da();1===t?0!=(8&Ci)&&0==(48&Ci)?du(e):(cu(e,n),0===Ci&&(Ui(),Va())):(0==(4&Ci)||98!==r&&99!==r||(null===Gi?Gi=new Set([e]):Gi.add(e)),cu(e,n)),Fi=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,l=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-$t(i),c=1<<u,s=l[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,Mt(c);var f=Rt;l[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=It(e,e===_i?Pi:0),t=Rt,0===r)null!==n&&(n!==La&&Ea(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==La&&Ea(n)}15===t?(n=du.bind(null,e),null===Ra?(Ra=[n],Ma=ka(Aa,Wa)):Ra.push(n),n=La):n=14===t?$a(99,du.bind(null,e)):$a(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(t),su.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function su(e){if(eu=-1,nu=tu=0,0!=(48&Ci))throw Error(o(327));var t=e.callbackNode;if(_u()&&e.callbackNode!==t)return null;var n=It(e,e===_i?Pi:0);if(0===n)return null;var r=n,a=Ci;Ci|=16;var l=yu();for(_i===e&&Pi===r||(Ui(),mu(e,r));;)try{wu();break}catch(t){vu(e,t)}if(Ga(),Si.current=l,Ci=a,null!==Ai?r=0:(_i=null,Pi=0,r=Oi),0!=(zi&Mi))mu(e,0);else if(0!==r){if(2===r&&(Ci|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(n=Ft(e))&&(r=gu(e,n))),1===r)throw t=Li,mu(e,0),fu(e,n),cu(e,ja()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(o(345));case 2:Su(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=ji+500-ja())){if(0!==It(e,0))break;if(((a=e.suspendedLanes)&n)!==n){lu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Ur(Su.bind(null,e),r);break}Su(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-$t(n);l=1<<i,(i=r[i])>a&&(a=i),n&=~l}if(n=a,10<(n=(120>(n=ja()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ei(n/1960))-n)){e.timeoutHandle=Ur(Su.bind(null,e),n);break}Su(e);break;case 5:Su(e);break;default:throw Error(o(329))}}return cu(e,ja()),e.callbackNode===t?su.bind(null,e):null}function fu(e,t){for(t&=~Ii,t&=~Mi,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-$t(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&Ci))throw Error(o(327));if(_u(),e===_i&&0!=(e.expiredLanes&Pi)){var t=Pi,n=gu(e,t);0!=(zi&Mi)&&(n=gu(e,t=It(e,t)))}else n=gu(e,t=It(e,0));if(0!==e.tag&&2===n&&(Ci|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(t=Ft(e))&&(n=gu(e,t))),1===n)throw n=Li,mu(e,0),fu(e,t),cu(e,ja()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Su(e),cu(e,ja()),null}function pu(e,t){oa(Ni,Ti),Ti|=t,zi|=t}function hu(){Ti=Ni.current,la(Ni)}function mu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Br(n)),null!==Ai)for(n=Ai.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:Tl(),la(ca),la(ua),Wl();break;case 5:Ol(r);break;case 4:Tl();break;case 13:case 19:la(Ll);break;case 10:Za(r);break;case 23:case 24:hu()}n=n.return}_i=e,Ai=Fu(e.current,null),Pi=Ti=zi=t,Oi=0,Li=null,Ii=Mi=Ri=0}function vu(e,t){for(;;){var n=Ai;try{if(Ga(),Hl.current=Ao,Gl){for(var r=Kl.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Gl=!1}if(ql=0,Xl=Yl=Kl=null,Zl=!1,xi.current=null,null===n||null===n.return){Oi=1,Li=t,Ai=null;break}e:{var l=e,o=n.return,i=n,u=t;if(t=Pi,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Ll.current),d=o;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=ll(-1,1);g.tag=2,ol(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=l.pingCache;if(null===b?(b=l.pingCache=new ai,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=Lu.bind(null,l,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Oi&&(Oi=2),u=ni(u,i),d=o;do{switch(d.tag){case 3:l=u,d.flags|=4096,t&=-t,d.lanes|=t,il(d,li(0,l,t));break e;case 1:l=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Hi||!Hi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,il(d,oi(d,l,t));break e}}d=d.return}while(null!==d)}Eu(n)}catch(e){t=e,Ai===n&&null!==n&&(Ai=n=n.return);continue}break}}function yu(){var e=Si.current;return Si.current=Ao,null===e?Ao:e}function gu(e,t){var n=Ci;Ci|=16;var r=yu();for(_i===e&&Pi===t||mu(e,t);;)try{bu();break}catch(t){vu(e,t)}if(Ga(),Ci=n,Si.current=r,null!==Ai)throw Error(o(261));return _i=null,Pi=0,Oi}function bu(){for(;null!==Ai;)ku(Ai)}function wu(){for(;null!==Ai&&!Sa();)ku(Ai)}function ku(e){var t=Bi(e.alternate,e,Ti);e.memoizedProps=e.pendingProps,null===t?Eu(e):Ai=t,xi.current=null}function Eu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ei(n,t,Ti)))return void(Ai=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ti)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ti(t)))return n.flags&=2047,void(Ai=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ai=t);Ai=t=e}while(null!==t);0===Oi&&(Oi=5)}function Su(e){var t=Da();return Ba(99,xu.bind(null,e,t)),null}function xu(e,t){do{_u()}while(null!==qi);if(0!=(48&Ci))throw Error(o(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,l=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<l;){var c=31-$t(l),s=1<<c;a[c]=0,i[c]=-1,u[c]=-1,l&=~s}if(null!==Gi&&0==(24&r)&&Gi.has(e)&&Gi.delete(e),e===_i&&(Ai=_i=null,Pi=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ci,Ci|=32,xi.current=null,Ir=qt,dr(i=fr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,l=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==l&&3!==v.nodeType||(d=f+l),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++h===l&&(d=f),y===c&&++m===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Fr={focusedElem:i,selectionRange:u},qt=!1,ru=null,au=!1,$i=r;do{try{Cu()}catch(e){if(null===$i)throw Error(o(330));Ou($i,e),$i=$i.nextEffect}}while(null!==$i);ru=null,$i=r;do{try{for(i=e;null!==$i;){var b=$i.flags;if(16&b&&ye($i.stateNode,""),128&b){var w=$i.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:mi($i),$i.flags&=-3;break;case 6:mi($i),$i.flags&=-3,bi($i.alternate,$i);break;case 1024:$i.flags&=-1025;break;case 1028:$i.flags&=-1025,bi($i.alternate,$i);break;case 4:bi($i.alternate,$i);break;case 8:gi(i,u=$i);var E=u.alternate;pi(u),null!==E&&pi(E)}$i=$i.nextEffect}}catch(e){if(null===$i)throw Error(o(330));Ou($i,e),$i=$i.nextEffect}}while(null!==$i);if(k=Fr,w=fr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&sr(b.ownerDocument.documentElement,b)){null!==i&&dr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=cr(b,E),l=cr(b,i),u&&l&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==l.node||k.focusOffset!==l.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(l.node,l.offset)):(w.setEnd(l.node,l.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qt=!!Ir,Fr=Ir=null,e.current=n,$i=r;do{try{for(b=e;null!==$i;){var S=$i.flags;if(36&S&&si(b,$i.alternate,$i),128&S){w=void 0;var x=$i.ref;if(null!==x){var C=$i.stateNode;switch($i.tag){case 5:w=C;break;default:w=C}"function"==typeof x?x(w):x.current=w}}$i=$i.nextEffect}}catch(e){if(null===$i)throw Error(o(330));Ou($i,e),$i=$i.nextEffect}}while(null!==$i);$i=null,za(),Ci=a}else e.current=n;if(Qi)Qi=!1,qi=e,Ki=t;else for($i=r;null!==$i;)t=$i.nextEffect,$i.nextEffect=null,8&$i.flags&&((S=$i).sibling=null,S.stateNode=null),$i=t;if(0===(r=e.pendingLanes)&&(Hi=null),1===r?e===Ji?Zi++:(Zi=0,Ji=e):Zi=0,n=n.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(ga,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,ja()),Vi)throw Vi=!1,e=Wi,Wi=null,e;return 0!=(8&Ci)||Va(),null}function Cu(){for(;null!==$i;){var e=$i.alternate;au||null===ru||(0!=(8&$i.flags)?Ze($i,ru)&&(au=!0):13===$i.tag&&ki(e,$i)&&Ze($i,ru)&&(au=!0));var t=$i.flags;0!=(256&t)&&ci(e,$i),0==(512&t)||Qi||(Qi=!0,$a(97,(function(){return _u(),null}))),$i=$i.nextEffect}}function _u(){if(90!==Ki){var e=97<Ki?97:Ki;return Ki=90,Ba(e,Tu)}return!1}function Au(e,t){Yi.push(t,e),Qi||(Qi=!0,$a(97,(function(){return _u(),null})))}function Pu(e,t){Xi.push(t,e),Qi||(Qi=!0,$a(97,(function(){return _u(),null})))}function Tu(){if(null===qi)return!1;var e=qi;if(qi=null,0!=(48&Ci))throw Error(o(331));var t=Ci;Ci|=32;var n=Xi;Xi=[];for(var r=0;r<n.length;r+=2){var a=n[r],l=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===l)throw Error(o(330));Ou(l,e)}}for(n=Yi,Yi=[],r=0;r<n.length;r+=2){a=n[r],l=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===l)throw Error(o(330));Ou(l,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ci=t,Va(),!0}function Nu(e,t,n){ol(e,t=li(0,t=ni(n,t),1)),t=lu(),null!==(e=uu(e,1))&&(Bt(e,1,t),cu(e,t))}function Ou(e,t){if(3===e.tag)Nu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Nu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hi||!Hi.has(r))){var a=oi(n,e=ni(t,e),1);if(ol(n,a),a=lu(),null!==(n=uu(n,1)))Bt(n,1,a),cu(n,a);else if("function"==typeof r.componentDidCatch&&(null===Hi||!Hi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Lu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=lu(),e.pingedLanes|=e.suspendedLanes&n,_i===e&&(Pi&n)===n&&(4===Oi||3===Oi&&(62914560&Pi)===Pi&&500>ja()-ji?mu(e,0):Ii|=n),cu(e,t)}function zu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Da()?1:2:(0===tu&&(tu=zi),0===(t=Dt(62914560&~tu))&&(t=4194304))),n=lu(),null!==(e=uu(e,t))&&(Bt(e,t,n),cu(e,n))}function Ru(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Mu(e,t,n,r){return new Ru(e,t,n,r)}function Iu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=Mu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ju(e,t,n,r,a,l){var i=2;if(r=e,"function"==typeof e)Iu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Du(n.children,a,l,t);case I:i=8,a|=16;break;case C:i=8,a|=1;break;case _:return(e=Mu(12,n,t,8|a)).elementType=_,e.type=_,e.lanes=l,e;case N:return(e=Mu(13,n,t,a)).type=N,e.elementType=N,e.lanes=l,e;case O:return(e=Mu(19,n,t,a)).elementType=O,e.lanes=l,e;case F:return Uu(n,a,l,t);case j:return(e=Mu(24,n,t,a)).elementType=j,e.lanes=l,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:i=10;break e;case P:i=9;break e;case T:i=11;break e;case L:i=14;break e;case z:i=16,r=null;break e;case R:i=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Mu(i,n,t,a)).elementType=e,t.type=r,t.lanes=l,t}function Du(e,t,n,r){return(e=Mu(7,e,r,t)).lanes=n,e}function Uu(e,t,n,r){return(e=Mu(23,e,r,t)).elementType=F,e.lanes=n,e}function Bu(e,t,n){return(e=Mu(6,e,null,t)).lanes=n,e}function $u(e,t,n){return(t=Mu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Vu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ut(0),this.expirationTimes=Ut(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ut(0),this.mutableSourceEagerHydrationData=null}function Wu(e,t,n,r){var a=t.current,l=lu(),i=ou(a);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(o(171))}if(1===n.tag){var c=n.type;if(da(c)){n=ma(n,c,u);break e}}n=u}else n=ia;return null===t.context?t.context=n:t.pendingContext=n,(t=ll(l,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ol(a,t),iu(a,i,l),i}function Hu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Qu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qu(e,t){Qu(e,t),(e=e.alternate)&&Qu(e,t)}function Ku(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Vu(e,t,null!=n&&!0===n.hydrate),t=Mu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,rl(t),e[Yr]=n.current,Ar(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Yu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xu(e,t,n,r,a){var l=n._reactRootContainer;if(l){var o=l._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Hu(o);i.call(e)}}Wu(t,o,e,a)}else{if(l=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ku(e,0,t?{hydrate:!0}:void 0)}(n,r),o=l._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Hu(o);u.call(e)}}!function(e,t){var n=Ci;Ci&=-2,Ci|=8;try{e(t)}finally{0===(Ci=n)&&(Ui(),Va())}}((function(){Wu(t,o,e,a)}))}return Hu(o)}Bi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ca.current)Lo=!0;else{if(0==(n&r)){switch(Lo=!1,t.tag){case 3:$o(t),$l();break;case 5:Nl(t);break;case 1:da(t.type)&&va(t);break;case 4:Pl(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;oa(qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?qo(e,t,n):(oa(Ll,1&Ll.current),null!==(t=Zo(e,t,n))?t.sibling:null);oa(Ll,1&Ll.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Go(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),oa(Ll,Ll.current),r)break;return null;case 23:case 24:return t.lanes=0,Fo(e,t,n)}return Zo(e,t,n)}Lo=0!=(16384&e.flags)}else Lo=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),el(t,n),a=to(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var l=!0;va(t)}else l=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,rl(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&fl(t,r,i,e),a.updater=dl,t.stateNode=a,a._reactInternals=t,vl(t,r,e,n),t=Bo(null,t,r,!0,l,n)}else t.tag=0,zo(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(l=a._init)(a._payload),t.type=a,l=t.tag=function(e){if("function"==typeof e)return Iu(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===L)return 14}return 2}(a),e=Qa(a,e),l){case 0:t=Do(null,t,a,e,n);break e;case 1:t=Uo(null,t,a,e,n);break e;case 11:t=Ro(null,t,a,e,n);break e;case 14:t=Mo(null,t,a,Qa(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Do(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Uo(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 3:if($o(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,al(e,t),ul(t,r,null,n),(r=t.memoizedState.element)===a)$l(),t=Zo(e,t,n);else{if((l=(a=t.stateNode).hydrate)&&(Ml=Vr(t.stateNode.containerInfo.firstChild),Rl=t,l=Il=!0),l){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(l=e[a])._workInProgressVersionPrimary=e[a+1],Vl.push(l);for(n=El(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else zo(e,t,r,n),$l();t=t.child}return t;case 5:return Nl(t),null===e&&Dl(t),r=t.type,a=t.pendingProps,l=null!==e?e.memoizedProps:null,i=a.children,Dr(r,a)?i=null:null!==l&&Dr(r,l)&&(t.flags|=16),jo(e,t),zo(e,t,i,n),t.child;case 6:return null===e&&Dl(t),null;case 13:return qo(e,t,n);case 4:return Pl(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=kl(t,null,r,n):zo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ro(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 7:return zo(e,t,t.pendingProps,n),t.child;case 8:case 12:return zo(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,l=a.value;var u=t.type._context;if(oa(qa,u._currentValue),u._currentValue=l,null!==i)if(u=i.value,0==(l=lr(u,l)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823))){if(i.children===a.children&&!ca.current){t=Zo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&l)){1===u.tag&&((s=ll(-1,n&-n)).tag=2,ol(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),Ja(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}zo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(l=t.pendingProps).children,el(t,n),r=r(a=tl(a,l.unstable_observedBits)),t.flags|=1,zo(e,t,r,n),t.child;case 14:return l=Qa(a=t.type,t.pendingProps),Mo(e,t,a,l=Qa(a.type,l),r,n);case 15:return Io(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,va(t)):e=!1,el(t,n),hl(t,r,a),vl(t,r,a,n),Bo(null,t,r,!0,e,n);case 19:return Go(e,t,n);case 23:case 24:return Fo(e,t,n)}throw Error(o(156,t.tag))},Ku.prototype.render=function(e){Wu(e,this._internalRoot,null,null)},Ku.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Wu(null,e,null,(function(){t[Yr]=null}))},Je=function(e){13===e.tag&&(iu(e,4,lu()),qu(e,4))},et=function(e){13===e.tag&&(iu(e,67108864,lu()),qu(e,67108864))},tt=function(e){if(13===e.tag){var t=lu(),n=ou(e);iu(e,n,t),qu(e,n)}},nt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(o(90));G(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&oe(e,!!n.multiple,t,!1)}},Le=function(e,t){var n=Ci;Ci|=1;try{return e(t)}finally{0===(Ci=n)&&(Ui(),Va())}},ze=function(e,t,n,r,a){var l=Ci;Ci|=4;try{return Ba(98,e.bind(null,t,n,r,a))}finally{0===(Ci=l)&&(Ui(),Va())}},Re=function(){0==(49&Ci)&&(function(){if(null!==Gi){var e=Gi;Gi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,ja())}))}Va()}(),_u())},Me=function(e,t){var n=Ci;Ci|=2;try{return e(t)}finally{0===(Ci=n)&&(Ui(),Va())}};var Gu={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Zu={bundleType:Gu.bundleType,version:Gu.version,rendererPackageName:Gu.rendererPackageName,rendererConfig:Gu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){n=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===n)return Ge(a),e;if(l===r)return Ge(a),t;l=l.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=l;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=l;break}if(u===r){i=!0,r=a,n=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===n){i=!0,n=l,r=a;break}if(u===r){i=!0,r=l,n=a;break}u=u.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Gu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Ju=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ju.isDisabled&&Ju.supportsFiber)try{ga=Ju.inject(Zu),ba=Ju}catch(me){}}t.render=function(e,t,n){if(!Yu(t))throw Error(o(200));return Xu(null,e,t,!1,n)}},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,l=n?Symbol.for("react.fragment"):60107,o=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case l:case i:case o:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case m:case u:return e;default:return t}}case a:return t}}}function E(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=l,t.Lazy=v,t.Memo=m,t.Portal=a,t.Profiler=i,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===s},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===l},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===i},t.isStrictMode=function(e){return k(e)===o},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===i||e===o||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},864:(e,t,n)=>{"use strict";e.exports=n(921)},585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},658:(e,t,n)=>{var r=n(585);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],l=0;l<t.length;l++)a.push(e(t[l],n,r).source);return s(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(l(e,n),t,n)}(t,n,a)},e.exports.parse=l,e.exports.compile=function(e,t){return i(l(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function l(e,t){for(var n,r=[],l=0,o=0,i="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(o,p),o=p+f.length,d)i+=d[1];else{var h=e[o],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,S="?"===b||"*"===b,x=n[2]||s,C=y||g;r.push({name:v||l++,prefix:m||"",delimiter:x,optional:S,repeat:E,partial:k,asterisk:!!w,pattern:C?c(C):w?".*":"[^"+u(x)+"]+?"})}}return o<e.length&&(i+=e.substr(o)),i&&r.push(i),r}function o(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var l="",i=t||{},u=(a||{}).pretty?o:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(l+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");l+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');l+=s.prefix+f}}else l+=s}return l}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,l=!1!==n.end,o="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)o+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),o+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=o.slice(-h.length)===h;return a||(o=(m?o.slice(0,-h.length):o)+"(?:"+h+"(?=$))?"),o+=l?"$":a&&m?"":"(?="+h+"|$)",s(new RegExp("^"+o,f(n)),t)}},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,l=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var o=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),l=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),o=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,l={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(l[r]=t[r]);var u=arguments.length-2;if(1===u)l.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];l.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===l[r]&&(l[r]=u[r]);return{$$typeof:a,type:e,key:o,ref:i,props:l,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,n,r,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case l:u=!0}}if(u)return o=o(u=e),e=""===r?"."+_(u,0):r,Array.isArray(o)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),A(o,t,n,"",(function(e){return e}))):null!=o&&(x(o)&&(o=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+_(i=e[c],c);u+=A(i,t,n,s,o)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=A(i=i.value,t,n,s=r+_(i,c++),o);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],a=0;return A(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var N={current:null};function O(){var e=N.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var l=r({},e.props),o=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(l[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)l.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];l.children=c}return{$$typeof:a,type:e.type,key:o,ref:i,props:l,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return O().useCallback(e,t)},t.useContext=function(e,t){return O().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return O().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return O().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return O().useLayoutEffect(e,t)},t.useMemo=function(e,t){return O().useMemo(e,t)},t.useReducer=function(e,t,n){return O().useReducer(e,t,n)},t.useRef=function(e){return O().useRef(e)},t.useState=function(e){return O().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,l;if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<C(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var l=2*(r+1)-1,o=e[l],i=l+1,u=e[i];if(void 0!==o&&0>C(o,n))void 0!==u&&0>C(u,o)?(e[r]=u,e[i]=n,r=i):(e[r]=o,e[l]=n,r=l);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],A=[],P=1,T=null,N=3,O=!1,L=!1,z=!1;function R(e){for(var t=S(A);null!==t;){if(null===t.callback)x(A);else{if(!(t.startTime<=e))break;x(A),t.sortIndex=t.expirationTime,E(_,t)}t=S(A)}}function M(e){if(z=!1,R(e),!L)if(null!==S(_))L=!0,n(I);else{var t=S(A);null!==t&&r(M,t.startTime-e)}}function I(e,n){L=!1,z&&(z=!1,a()),O=!0;var l=N;try{for(R(n),T=S(_);null!==T&&(!(T.expirationTime>n)||e&&!t.unstable_shouldYield());){var o=T.callback;if("function"==typeof o){T.callback=null,N=T.priorityLevel;var i=o(T.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?T.callback=i:T===S(_)&&x(_),R(n)}else x(_);T=S(_)}if(null!==T)var u=!0;else{var c=S(A);null!==c&&r(M,c.startTime-n),u=!1}return u}finally{T=null,N=l,O=!1}}var F=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||O||(L=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(_)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var n=N;N=t;try{return e()}finally{N=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=F,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=N;N=e;try{return t()}finally{N=n}},t.unstable_scheduleCallback=function(e,l,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:l,priorityLevel:e,startTime:o,expirationTime:u=o+u,sortIndex:-1},o>i?(e.sortIndex=o,E(A,e),null===S(_)&&e===S(A)&&(z?a():z=!0,r(M,o-i))):(e.sortIndex=u,E(_,e),L||O||(L=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var n=N;N=t;try{return e.apply(this,arguments)}finally{N=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},379:(e,t,n)=>{"use strict";var r,a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),l=[];function o(e){for(var t=-1,n=0;n<l.length;n++)if(l[n].identifier===e){t=n;break}return t}function i(e,t){for(var n={},r=[],a=0;a<e.length;a++){var i=e[a],u=t.base?i[0]+t.base:i[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=o(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(l[f].references++,l[f].updater(d)):l.push({identifier:s,updater:m(d,t),references:1}),r.push(s)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var l=n.nc;l&&(r.nonce=l)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var c,s=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function f(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(t,a);else{var l=document.createTextNode(a),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(l,o[t]):e.appendChild(l)}}function d(e,t,n){var r=n.css,a=n.media,l=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function m(e,t){var n,r,a;if(t.singleton){var l=h++;n=p||(p=u(t)),r=f.bind(null,n,l,!1),a=f.bind(null,n,l,!0)}else n=u(t),r=d.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=i(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=o(n[r]);l[a].references--}for(var u=i(e,t),c=0;c<n.length;c++){var s=o(n[c]);0===l[s].references&&(l[s].updater(),l.splice(s,1))}n=u}}}}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(294),t=n(935);function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var a=n(697),l=n.n(a);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e){return"/"===e.charAt(0)}function u(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}const c=function(e,t){if(!e)throw new Error("Invariant failed")};function s(e){return"/"===e.charAt(0)?e:"/"+e}function f(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function p(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function h(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function m(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var l=t.indexOf("?");return-1!==l&&(n=t.substr(l),t=t.substr(0,l)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=o({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],l=e&&i(e),o=t&&i(t),c=l||o;if(e&&i(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var s=a[a.length-1];n="."===s||".."===s||""===s}else n=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?u(a,d):".."===p?(u(a,d),f++):f&&(u(a,d),f--)}if(!c)for(;f--;f)a.unshift("..");!c||""===a[0]||a[0]&&i(a[0])||a.unshift("");var h=a.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function v(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var l="function"==typeof e?e(t,n):e;"string"==typeof l?"function"==typeof r?r(l,a):a(!0):a(!1!==l)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var y=!("undefined"==typeof window||!window.document||!window.document.createElement);function g(e,t){t(window.confirm(e))}var b="hashchange",w={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+f(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:f,decodePath:s},slash:{encodePath:s,decodePath:s}};function k(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function E(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function S(e){window.location.replace(k(window.location.href)+"#"+e)}function x(e){void 0===e&&(e={}),y||c(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?g:r,l=n.hashType,i=void 0===l?"slash":l,u=e.basename?p(s(e.basename)):"",f=w[i],x=f.encodePath,C=f.decodePath;function _(){var e=C(E());return u&&(e=d(e,u)),m(e)}var A=v();function P(e){o(U,e),U.length=t.length,A.notifyListeners(U.location,U.action)}var T=!1,N=null;function O(){var e,t,n=E(),r=x(n);if(n!==r)S(r);else{var l=_(),o=U.location;if(!T&&(t=l,(e=o).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(N===h(l))return;N=null,function(e){if(T)T=!1,P();else{A.confirmTransitionTo(e,"POP",a,(function(t){t?P({action:"POP",location:e}):function(e){var t=U.location,n=M.lastIndexOf(h(t));-1===n&&(n=0);var r=M.lastIndexOf(h(e));-1===r&&(r=0);var a=n-r;a&&(T=!0,I(a))}(e)}))}}(l)}}var L=E(),z=x(L);L!==z&&S(z);var R=_(),M=[h(R)];function I(e){t.go(e)}var F=0;function j(e){1===(F+=e)&&1===e?window.addEventListener(b,O):0===F&&window.removeEventListener(b,O)}var D=!1,U={length:t.length,action:"POP",location:R,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=k(window.location.href)),n+"#"+x(u+h(e))},push:function(e,t){var n="PUSH",r=m(e,void 0,void 0,U.location);A.confirmTransitionTo(r,n,a,(function(e){if(e){var t=h(r),a=x(u+t);if(E()!==a){N=t,function(e){window.location.hash=e}(a);var l=M.lastIndexOf(h(U.location)),o=M.slice(0,l+1);o.push(t),M=o,P({action:n,location:r})}else P()}}))},replace:function(e,t){var n="REPLACE",r=m(e,void 0,void 0,U.location);A.confirmTransitionTo(r,n,a,(function(e){if(e){var t=h(r),a=x(u+t);E()!==a&&(N=t,S(a));var l=M.indexOf(h(U.location));-1!==l&&(M[l]=t),P({action:n,location:r})}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=A.setPrompt(e);return D||(j(1),D=!0),function(){return D&&(D=!1,j(-1)),t()}},listen:function(e){var t=A.appendListener(e);return j(1),function(){j(-1),t()}}};return U}var C=1073741823,_="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function A(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const P=e.createContext||function(t,n){var a,o,i,u="__create-react-context-"+((_[i="__global_unique_id__"]=(_[i]||0)+1)+"__"),c=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).emitter=A(t.props.value),t}r(t,e);var a=t.prototype;return a.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},a.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,a=e.value;((l=r)===(o=a)?0!==l||1/l==1/o:l!=l&&o!=o)?t=0:(t="function"==typeof n?n(r,a):C,0!=(t|=0)&&this.emitter.set(e.value,t))}var l,o},a.render=function(){return this.props.children},t}(e.Component);c.childContextTypes=((a={})[u]=l().object.isRequired,a);var s=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={value:t.getValue()},t.onUpdate=function(e,n){0!=((0|t.observedBits)&n)&&t.setState({value:t.getValue()})},t}r(n,e);var a=n.prototype;return a.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?C:t},a.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?C:e},a.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},a.getValue=function(){return this.context[u]?this.context[u].get():t},a.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(e.Component);return s.contextTypes=((o={})[u]=l().object,o),{Provider:c,Consumer:s}};var T=n(658),N=n.n(T);function O(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(864),n(679);var L=function(e){var t=P();return t.displayName="Router-History",t}(),z=function(e){var t=P();return t.displayName="Router",t}(),R=function(t){function n(e){var n;return(n=t.call(this,e)||this).state={location:e.history.location},n._isMounted=!1,n._pendingLocation=null,e.staticContext||(n.unlisten=e.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}r(n,t),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var a=n.prototype;return a.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},a.componentWillUnmount=function(){this.unlisten&&this.unlisten()},a.render=function(){return e.createElement(z.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},e.createElement(L.Provider,{children:this.props.children||null,value:this.props.history}))},n}(e.Component);e.Component,e.Component;var M={},I=0;function F(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,l=void 0!==a&&a,o=n.strict,i=void 0!==o&&o,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=M[n]||(M[n]={});if(r[e])return r[e];var a=[],l={regexp:N()(e,a,t),keys:a};return I<1e4&&(r[e]=l,I++),l}(n,{end:l,strict:i,sensitive:c}),a=r.regexp,o=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return l&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:o.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var j=function(t){function n(){return t.apply(this,arguments)||this}return r(n,t),n.prototype.render=function(){var t=this;return e.createElement(z.Consumer,null,(function(n){n||c(!1);var r=t.props.location||n.location,a=o({},n,{location:r,match:t.props.computedMatch?t.props.computedMatch:t.props.path?F(r.pathname,t.props):n.match}),l=t.props,i=l.children,u=l.component,s=l.render;return Array.isArray(i)&&0===i.length&&(i=null),e.createElement(z.Provider,{value:a},a.match?i?"function"==typeof i?i(a):i:u?e.createElement(u,a):s?s(a):null:"function"==typeof i?i(a):null)}))},n}(e.Component);e.Component;var D=function(t){function n(){return t.apply(this,arguments)||this}return r(n,t),n.prototype.render=function(){var t=this;return e.createElement(z.Consumer,null,(function(n){n||c(!1);var r,a,l=t.props.location||n.location;return e.Children.forEach(t.props.children,(function(t){if(null==a&&e.isValidElement(t)){r=t;var i=t.props.path||t.props.from;a=i?F(l.pathname,o({},t.props,{path:i})):n.match}})),a?e.cloneElement(r,{location:l,computedMatch:a}):null}))},n}(e.Component),U=e.useContext;e.Component;var B=function(t){function n(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(e=t.call.apply(t,[this].concat(r))||this).history=x(e.props),e}return r(n,t),n.prototype.render=function(){return e.createElement(R,{history:this.history,children:this.props.children})},n}(e.Component),$=function(e,t){return"function"==typeof e?e(t):e},V=function(e,t){return"string"==typeof e?m(e,null,null,t):e},W=function(e){return e},H=e.forwardRef;void 0===H&&(H=W);var Q=H((function(t,n){var r=t.innerRef,a=t.navigate,l=t.onClick,i=O(t,["innerRef","navigate","onClick"]),u=i.target,c=o({},i,{onClick:function(e){try{l&&l(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||u&&"_self"!==u||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return c.ref=W!==H&&n||r,e.createElement("a",c)})),q=H((function(t,n){var r=t.component,a=void 0===r?Q:r,l=t.replace,i=t.to,u=t.innerRef,s=O(t,["component","replace","to","innerRef"]);return e.createElement(z.Consumer,null,(function(t){t||c(!1);var r=t.history,f=V($(i,t.location),t.location),d=f?r.createHref(f):"",p=o({},s,{href:d,navigate:function(){var e=$(i,t.location);(l?r.replace:r.push)(e)}});return W!==H?p.ref=n||u:p.innerRef=u,e.createElement(a,p)}))})),K=function(e){return e},Y=e.forwardRef;void 0===Y&&(Y=K),Y((function(t,n){var r=t["aria-current"],a=void 0===r?"page":r,l=t.activeClassName,i=void 0===l?"active":l,u=t.activeStyle,s=t.className,f=t.exact,d=t.isActive,p=t.location,h=t.sensitive,m=t.strict,v=t.style,y=t.to,g=t.innerRef,b=O(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement(z.Consumer,null,(function(t){t||c(!1);var r=p||t.location,l=V($(y,r),r),w=l.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=k?F(r.pathname,{path:k,exact:f,sensitive:h,strict:m}):null,S=!!(d?d(E,r):E),x=S?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(s,i):s,C=S?o({},v,{},u):v,_=o({"aria-current":S&&a||null,className:x,style:C,to:l},b);return K!==Y?_.ref=n||g:_.innerRef=g,e.createElement(q,_)}))}));var X="news-backend.ttrend.in";const G=function(t){var n=t.id,r=t.summary_short,a=(t.summary_long,t.first_article),l=t.total_articles,o=a.newsapi_title,i=a.newsapi_image_url,u={background:"linear-gradient(transparent 24%, ".concat("rgba(100%, 100%, 100%, 70%)"," 48%, ").concat("rgba(100%, 100%, 100%, 90%)","), center/cover no-repeat url(").concat(i,")")};return e.createElement("article",{style:u},e.createElement("div",{className:"text"},e.createElement("h4",null,o),e.createElement("p",null,r)),e.createElement(q,{to:n},l>1?"See all ".concat(l," articles"):"See article details"," ➡︎"))};function Z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const J=function(){var t,n,r=U(z).location,a=new URLSearchParams(r.search),l=(t=(0,e.useState)([]),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,l=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){a=!0,l=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw l}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=l[0],i=l[1];(0,e.useEffect)((function(){var e;(e="https://".concat(X,"/summaries"),fetch(e).then((function(e){return e.json()}))).then((function(e){return i(e)}))}),[]);var u=parseInt(a.get("min_articles")||2,10),c=o.filter((function(e){return e.total_articles>=u})),s=parseInt(a.get("offset")||0,10),f=parseInt(a.get("limit")||20,10),d=c.slice(s,s+f);return e.createElement("div",{className:"feed"},e.createElement("header",null,e.createElement("h4",null,"Displaying ",d.length," out of ",c.length," news events")),d.map((function(t,n){return e.createElement("div",{key:n},e.createElement(G,t))})),e.createElement("footer",null,e.createElement(q,{to:{search:"?offset=".concat(s+f,"&limit=").concat(f)}},"View more")))};function ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function te(t){var n=t.url,r=(t.newsapi_source_id,t.newsapi_source_name),a=(t.newsapi_author,t.newsapi_title),l=(t.newsapi_description,t.newsapi_image_url,t.newsapi_date,t.newsapi_content),o=(t.extracted_title,t.extracted_authors,t.extracted_date,t.extracted_text,a),i=(l||"No content").replace(/\[\+\d+ chars\]$/,"");return e.createElement("div",{className:"source"},e.createElement("h5",null,o),e.createElement("p",null,i),e.createElement("small",null,e.createElement("a",{href:n},"Original article at ",r)))}const ne=function(t){var n,r,a=t.match.params,l=a.stem,o=a.index,i=(n=(0,e.useState)({}),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,l=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){a=!0,l=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw l}}return n}}(n,r)||function(e,t){if(e){if("string"==typeof e)return ee(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ee(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=i[0],c=i[1];(0,e.useEffect)((function(){(function(e,t){var n="https://".concat(X,"/summaries/").concat(e,"/").concat(t);return fetch(n).then((function(e){return e.json()}))})(l,o).then((function(e){return c(e)}))}),[l,o]);var s=u.summary_short,f=u.summary_long,d=u.articles,p=void 0===d?[]:d;return e.createElement("div",{className:"details"},e.createElement("header",null,e.createElement("h4",null,e.createElement(q,{to:"/"},"⬅︎ back"))),e.createElement("section",null,e.createElement("h4",null,"Brief summary"),e.createElement("p",null,s)),e.createElement("section",null,e.createElement("h4",null,"Extended summary"),e.createElement("p",null,f)),e.createElement("section",null,e.createElement("h4",null,p.length>1?"".concat(p.length," articles"):"1 article"),p.map((function(t,n){return e.createElement("div",{key:n},e.createElement(te,t))}))))},re=function(){return e.createElement(B,null,e.createElement("main",null,e.createElement("header",null,e.createElement("h3",null,"Swen")),e.createElement(D,null,e.createElement(j,{exact:!0,path:"/"},e.createElement(J,null)),e.createElement(j,{path:"/:stem/:index",component:ne}))))};var ae=n(379),le=n.n(ae),oe=n(426);le()(oe.Z,{insert:"head",singleton:!1}),oe.Z.locals;var ie=document.getElementById("app");t.render(e.createElement(re,null),ie)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,